{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","className","name","job","onClick","removeCharacter","class","document","getElementsByClassName","style","display","innerHTML","editButton","alt","src","cancelButton","getElementsByName","value","saveButton","Table","Form","initialState","state","handleChange","event","target","setState","submitForm","getElementById","alert","match","handleSubmit","this","htmlFor","type","id","onChange","React","Component","App","characters","filter","character","i","ReactDOM","render"],"mappings":"2OAEMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,mCACA,sCACA,gCAMVC,EAAY,SAACC,GACf,IA2BMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,wBAAIE,UAAU,WACTH,EAAII,MAET,wBAAID,UAAU,UACTH,EAAIK,KAET,4BACI,4BAAQC,QAAS,kBAAMV,EAAMW,gBAAgBN,KAA7C,WAEJ,4BACI,4BAASO,MAAM,YAAYF,QAAS,kBAxCjC,SAACL,GAChBQ,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,OACpEH,SAASC,uBAAuB,eAAeT,GAAOU,MAAMC,QAAU,QACtEH,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,QACpE,IAAIR,EAAOR,EAAME,cAAcG,GAAOG,KAClCC,EAAMT,EAAME,cAAcG,GAAOI,IACrCI,SAASC,uBAAuB,WAAWT,GAAOY,UAAW,iDAAiDT,EAAK,WACnHK,SAASC,uBAAuB,UAAUT,GAAOY,UAAW,gDAAgDR,EAAI,WAiC1DS,CAAWb,KAAQ,yBAAKc,IAAI,GAAGC,IAAI,uDAC7E,4BAASR,MAAM,cAAcF,QAAS,kBAhCjC,SAACL,GAClBQ,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,QACpEH,SAASC,uBAAuB,eAAeT,GAAOU,MAAMC,QAAU,OACtEH,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,OACpE,IAAIR,EAAOR,EAAME,cAAcG,GAAOG,KAClCC,EAAMT,EAAME,cAAcG,GAAOI,IACrCI,SAASC,uBAAuB,WAAWT,GAAOY,UAAW,OAAOT,EAAK,QACzEK,SAASC,uBAAuB,UAAUT,GAAOY,UAAW,OAAOR,EAAI,QAyBfY,CAAahB,KAAQ,yBAAKc,IAAI,GAAGC,IAAI,uDACjF,4BAASR,MAAM,YAAYF,QAAS,kBAxBjC,SAACL,GAChB,IAAIG,EAAOK,SAASS,kBAAkB,YAAYjB,GAAOkB,MACrDd,EAAMI,SAASS,kBAAkB,WAAWjB,GAAOkB,MACvDV,SAASC,uBAAuB,WAAWT,GAAOY,UAAW,OAAOT,EAAK,QACzEK,SAASC,uBAAuB,UAAUT,GAAOY,UAAW,OAAOR,EAAI,QACvEI,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,QACpEH,SAASC,uBAAuB,eAAeT,GAAOU,MAAMC,QAAU,OACtEH,SAASC,uBAAuB,aAAaT,GAAOU,MAAMC,QAAU,OAiBdQ,CAAWnB,KAAQ,yBAAKc,IAAI,GAAGC,IAAI,2EAK7F,OAAO,+BAAQnB,IAaJwB,EAVD,SAACzB,GAAW,IACfE,EAAiCF,EAAjCE,cAAcS,EAAmBX,EAAnBW,gBACrB,OACQ,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWT,cAAeA,EAAeS,gBAAiBA,M,OCrB3De,E,4MA/CXC,aAAe,CACXnB,KAAM,GACNC,IAAK,I,EAETmB,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBvB,EADe,EACfA,KAAMe,EADS,EACTA,MACb,EAAKS,SAAL,eACKxB,EAAOe,K,EAgBhBU,WAAa,WACkC,KAAxCpB,SAASqB,eAAe,QAAQX,MAC/BY,MAAM,uBAEqC,KAAvCtB,SAASqB,eAAe,OAAOX,MACnCY,MAAM,sBAGFtB,SAASqB,eAAe,QAAQX,MAAMa,MAAM,gBAGvCvB,SAASqB,eAAe,OAAOX,MAAMa,MAAM,iBAIhD,EAAKpC,MAAMqC,aAAa,EAAKT,OAC7B,EAAKI,SAAS,EAAKL,eAJnBQ,MAAM,uCAHNA,MAAM,mC,uDArBT,IAAD,EACgBG,KAAKV,MAAlBpB,EADH,EACGA,KAAMC,EADT,EACSA,IACb,OACI,8BACI,2BAAO8B,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOhC,KAAK,OAAOiC,GAAG,OAAOlB,MAAOf,EAAMkC,SAAUJ,KAAKT,eACrE,2BAAOU,QAAQ,OAAf,OACA,2BAAOC,KAAK,OAAOhC,KAAK,MAAMiC,GAAG,MAAMlB,MAAOd,EAAKiC,SAAUJ,KAAKT,eAClE,2BAAOW,KAAK,SAASjB,MAAM,SAASb,QAAS4B,KAAKL,kB,GAtB/CU,IAAMC,WC6BVC,E,4MA1BXjB,MAAO,CACHkB,WAAY,I,EAWhBnC,gBAAkB,SAACN,GAAW,IACnByC,EAAc,EAAKlB,MAAnBkB,WACP,EAAKd,SACD,CAACc,WAAYA,EAAWC,QAAO,SAACC,EAAUC,GACtC,OAAOA,IAAM5C,Q,EAKzBgC,aAAe,SAACW,GACZ,EAAKhB,SAAS,CAACc,WAAW,GAAD,mBAAM,EAAKlB,MAAMkB,YAAjB,CAA6BE,O,uDAnBjD,IACEF,EAAcR,KAAKV,MAAnBkB,WACP,OACI,yBAAKvC,UAAU,aACX,kBAAC,EAAD,CAAOL,cAAe4C,EAAYnC,gBAAiB2B,KAAK3B,kBACxD,kBAAC,EAAD,CAAM0B,aAAcC,KAAKD,oB,GATvBM,IAAMC,WCExBM,IAASC,OAAO,kBAAC,EAAD,MAAOtC,SAASqB,eAAe,U","file":"static/js/main.e7cad6e7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th>Remove</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const editButton = (index) => {\r\n        document.getElementsByClassName(\"icon-edit\")[index].style.display = 'none';\r\n        document.getElementsByClassName(\"icon-cancel\")[index].style.display = 'block';        \r\n        document.getElementsByClassName(\"icon-save\")[index].style.display = 'block'; \r\n        var name = props.characterData[index].name; \r\n        var job = props.characterData[index].job; \r\n        document.getElementsByClassName(\"rowName\")[index].innerHTML= \"<td><input type='text' name='currName' value='\"+name+\"'/></td>\";\r\n        document.getElementsByClassName(\"rowJob\")[index].innerHTML= \"<td><input type='text' name='currJob' value='\"+job+\"'/></td>\";\r\n    }\r\n    const cancelButton = (index) => {\r\n        document.getElementsByClassName(\"icon-edit\")[index].style.display = 'block';\r\n        document.getElementsByClassName(\"icon-cancel\")[index].style.display = 'none';        \r\n        document.getElementsByClassName(\"icon-save\")[index].style.display = 'none';\r\n        var name = props.characterData[index].name; \r\n        var job = props.characterData[index].job; \r\n        document.getElementsByClassName(\"rowName\")[index].innerHTML= \"<td>\"+name+\"</td>\";\r\n        document.getElementsByClassName(\"rowJob\")[index].innerHTML= \"<td>\"+job+\"</td>\";\r\n    }\r\n    const saveButton = (index) => {\r\n        var name = document.getElementsByName(\"currName\")[index].value;\r\n        var job = document.getElementsByName(\"currJob\")[index].value; \r\n        document.getElementsByClassName(\"rowName\")[index].innerHTML= \"<td>\"+name+\"</td>\";\r\n        document.getElementsByClassName(\"rowJob\")[index].innerHTML= \"<td>\"+job+\"</td>\";\r\n        document.getElementsByClassName(\"icon-edit\")[index].style.display = 'block';\r\n        document.getElementsByClassName(\"icon-cancel\")[index].style.display = 'none';        \r\n        document.getElementsByClassName(\"icon-save\")[index].style.display = 'none';\r\n    }\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td className=\"rowName\">\r\n                    {row.name}\r\n                </td>\r\n                <td className=\"rowJob\">\r\n                    {row.job}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n                <td>\r\n                    <button  class=\"icon-edit\" onClick={() => editButton(index)}><img alt=\"\" src=\"https://image.flaticon.com/icons/svg/66/66761.svg\"/></button>\r\n                    <button  class=\"icon-cancel\" onClick={() => cancelButton(index)}><img alt=\"\" src=\"https://image.flaticon.com/icons/svg/66/66847.svg\"/></button>\r\n                    <button  class=\"icon-save\" onClick={() => saveButton(index)}><img alt=\"\" src=\"https://www.flaticon.com/premium-icon/icons/svg/2767/2767140.svg\"/></button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const {characterData,removeCharacter} = props\r\n    return(\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n            </table>\r\n        );\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nclass Form extends React.Component{\r\n    initialState = {\r\n        name: '',\r\n        job: ''\r\n    }\r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n        return(\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n    submitForm = () =>{\r\n        if(document.getElementById(\"name\").value===\"\"){\r\n            alert(\"Name must be filled\");\r\n        }\r\n        else if(document.getElementById(\"job\").value===\"\"){\r\n            alert(\"Job must be filled\");\r\n        }\r\n        else{\r\n            if(!document.getElementById(\"name\").value.match(\"^[a-zA-Z ]*$\")){\r\n                alert(\"Name should be Alphabetic only\");\r\n            }\r\n            else if(!document.getElementById(\"job\").value.match(\"^[a-zA-Z ]*$\")){\r\n                alert(\"Job title should be Alphabetic only\");\r\n            }\r\n            else{\r\n                this.props.handleSubmit(this.state)\r\n                this.setState(this.initialState)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nclass App extends React.Component{\r\n    state= {\r\n        characters: [],\r\n    };\r\n    render(){\r\n        const {characters} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter}/>\r\n                <Form handleSubmit={this.handleSubmit}/>\r\n            </div>\r\n        );\r\n    }\r\n    removeCharacter = (index) => {\r\n        const {characters} = this.state\r\n        this.setState(\r\n            {characters: characters.filter((character,i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (character) => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './table.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}